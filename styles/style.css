body {
  background-color: #000;
}

main { /*make responsive later*/
  margin: 0 auto;
  width: 1080px;
  height: 800px;
  border: 1px dotted #00F3F9; /*aqua*/
}

.header {
  padding: 10px;
  padding-top: 20px;
  margin: 0 auto;
  max-width: 460px;
}

img {
  width: 300px;
}

.header h1 {
  font-family: 'Permanent Marker', cursive;
  display: inline;
  font-size: 2.5em;
  margin-left: 2%;
}
#grid {
  /* background-color: white; / * until mvp works * / */
  border: 1px solid #00F600; /*lime for neon fill*/
  height: 480px; /* 150px canvas default, so may be distorted 60%/h:480px */
  width: 756px; /* 300px canvas default, so may be distorted 70%/w:756px */
  /* MDN Note: If your renderings seem distorted, try specifying your width and height attributes explicitly in the <canvas> attributes, and not using CSS. */
  margin: 10px auto;
  display: block;
}

.button-wrapper {
  width: 300px;
  margin: 0 auto;
}

/*fix below..so hacky*/
.flicker1 {
  margin: 0;
  padding: 0;
  animation: flicker 2s steps(2, start) infinite;
}
.flicker2 {
  margin: 0;
  padding: 0;
  animation: flicker 7s steps(2, start) infinite;
}
.flicker3 {
  margin: 0;
  padding: 0;
  animation: flicker 6s steps(2, start) infinite;
}
.flicker4 {
  margin: 0;
  padding: 0;
  animation: flicker 10s steps(2, start) infinite;
}

@keyframes flicker {
to { color: #4FD1F8; } /*tron logo aqua*/

}

#info {
  margin: 10px 10%;
  padding: 10px;
  color: #00F3F9; /*aqua for neon fill*/
}

.objective {
  width: 50%;
  padding: 0 10px;
  float: left;
  margin-top: 0;
  /*background-color: grey;*/
}

.controls2 { /*boost*/
  padding: 0 10px;
  float: right;
  margin-top: 0;
  /*background-color: grey;*/
}

.controls1 { /*Steering*/
  margin-right: 5%;
  padding: 0 10px;
  float: right;
  margin-top: 0;
  /*background-color: grey;*/
}

.h3 { /* span, since headers are breaking flow atm */
  font-family: 'Permanent Marker', cursive;
  font-size: 1.4em;
  color: #00F600; /*lime for neon fill*/
}

.emph { /* span for info emphasis */
  color: #0079D3; /*navy for bold juxtaposition*/
}

#cycles { /*ctor*/
  background-color: #000; /*cycle1/2/3/4 will have neon juxtaposed*/
}

footer {
  margin: 0 auto;
  width: 90%;
  color: #8A02FE; /*purple for neon balance*/
  padding: 0 7px;
  margin-top: 10px;
}

.iframe-wrapper {
  width: 700px;
  height: 400px;
  margin: 0 auto;
  border: 1px solid #673AB7; /*purple for neon balance*/
}
.iframe-wrapper h2 {
  font-family: 'Permanent Marker', cursive;
  text-align: center;
  color: #673AB7; /*purple for neon balance*/
  padding-bottom: 0; margin-bottom: 0;
}
.iframe-wrapper p {
  margin: 0; padding: 0;
  text-align: center;
  color: #673AB7; /*purple for neon balance*/
}

#iframe {
  width: 100%;
  height: 300px;
}

a, footer p {
  color: #F2F100; /*yellow for bold juxtaposition*/
}

a:hover {
  color: #8A02FE; /*purple for neon balance*/

/*


Color Palette:
x-color: #00F3F9; aqua for neon fill
x-color: #00F600; lime for neon fill
x-color: #673AB7; purple for neon balance
x-color: #FF0095; pink for neon balance
x-color: #EF0000; red for bold juxtaposition
x-color: #F2F100; yellow for bold juxtaposition
x-color: #0079D3; navy for bold juxtaposition
x-color: #002F00; dark green for neat juxtaposition w/ lime
x-color: #246699; pale navy for neat juxtaposition w/ aqua
x-color: #888888; grey for understated fill
x-color: #; copy_paste
x-color: #; copy_paste
x-color: #; copy_paste

Self-Notes:
fillStyle: the color used in filltype method calls
fillRect(x, y, w, h) -> draws a rectangle at the canvas (x,y) coordinate.


*/
